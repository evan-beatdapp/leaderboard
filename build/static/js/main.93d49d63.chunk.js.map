{"version":3,"sources":["component/Table.js","component/Leaderboard.js","component/Prizes.js","component/Countdown.js","component/App.js","serviceWorker.js","index.js"],"names":["columns","name","selector","sortable","Table","react_default","a","createElement","index_cjs_default","data","this","props","Component","Leaderboard","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","Rules","align","state","points","rules","axios","get","response","setState","_this2","style","marginLeft","marginRight","onClick","component_Table","react_loading_default","type","color","height","width","React","Prizes","href","fontSize","index_es","date","App","className","target","rel","backgroundColor","Countdown_Leaderboard","Leaderboard_Leaderboard","Prizes_Prizes","Boolean","window","location","hostname","match","ReactDOM","render","src_component_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.93d49d63.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport DataTable from \"react-data-table-component\";\n\nconst columns = [\n  {\n    name: \"Username\",\n    selector: \"username\"\n  },\n  {\n    name: \"Points\",\n    selector: \"points\",\n    sortable: true\n  },\n  {\n    name: \"Support A Creator\",\n    selector: \"support_a_creator\",\n    sortable: true\n  },\n  {\n    name: \"Likes\",\n    selector: \"likes\",\n    sortable: true\n  },\n  {\n    name: \"Users Tagged\",\n    selector: \"users_tagged\",\n    sortable: true\n  },\n];\n\nclass Table extends Component {\n  render() {\n    return (\n      <div>\n        <h1>Leaderboard üì∂</h1>\n        <DataTable columns={columns} data={this.props.data} />\n      </div>\n    );\n  }\n}\n\nexport default Table;\n","import React from \"react\";\nimport axios from \"axios\";\nimport Table from \"./Table\";\nimport ReactLoading from \"react-loading\";\nimport \"../../node_modules/react-bootstrap-table/dist/react-bootstrap-table-all.min.css\";\n\nexport default class Leaderboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      points: [],\n      rules: false\n    };\n  }\n\n  async componentDidMount() {\n    const response = await axios.get(\n      \"http://secure-anchorage-54009.herokuapp.com/api/leaderboard\"\n    );\n    await this.setState({ response: response });\n  }\n\n  Rules = () => {\n    return (\n      <div>\n        <h2>Rules ‚úÖ</h2>\n        <div align=\"left\">\n          <li>1Ô∏è‚É£ Like for +1 point</li>\n          <li>2Ô∏è‚É£ Each friend you comment is +2 points</li>\n          <li>üîü Add me as your Support a Creator for +10 points</li>\n          <br />\n          <p>üí∞ Winner gets a $20 gift card!</p>\n          <p>ü§úü§õ On the event of a tie, the winner is randomly chosen</p>\n        </div>\n      </div>\n    );\n  };\n\n  render() {\n    return this.state.response ? (\n      <div>\n        {this.state.rules ? (\n          <div>\n            <div style={{ marginLeft: \"20%\", marginRight: \"20%\" }}>\n              <this.Rules />\n            </div>\n          </div>\n        ) : (\n          <button\n            onClick={() => {\n              this.setState({ rules: true });\n            }}\n          >\n            show rules\n          </button>\n        )}\n        <div style={{ marginLeft: \"10%\", marginRight: \"10%\" }} align=\"center\">\n          <Table data={this.state.response.data} />\n          <br />\n        </div>\n      </div>\n    ) : (\n      <div style={{ marginLeft: \"20%\", marginRight: \"20%\" }}>\n        <this.Rules />\n        <div align=\"center\">\n          <ReactLoading\n            type={\"spin\"}\n            color={\"#70c1ec\"}\n            height={50}\n            width={50}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default class Prizes extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    return (\n      <div style={{ marginLeft: \"10%\", marginRight: \"10%\" }}>\n        <h3>Prizes:</h3>\n        <div align=\"left\">\n          <a href=\"https://www.playstation.com/en-us/explore/playstationnetwork/psn-cards/\">\n            PLAYSTATION¬ÆSTORE Cash Cards\n          </a>\n          <br />\n          <a href=\"https://www.microsoft.com/en-ca/p/xbox-gift-card-digital-code/CFQ7TTC0K56J/0003?icid=XboxCat-Nav_5-GiftCard-081018&activetab=pivot%3aoverviewtab\">\n            Xbox Digital Gift Card\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport Countdown from \"react-countdown-now\";\n\nexport default class Leaderboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    return (\n      <div>\n        <h2>Contest ends in: </h2>\n        <div style={{ fontSize: 70 }}>\n          <Countdown\n            date={\"Sat, 19 Jan 2019 23:59:59\"}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Leaderboard from \"./Leaderboard\";\nimport Prizes from \"./Prizes\";\nimport Countdown from \"./Countdown\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <a\n          className=\"App-link\"\n          href=\"https://instagram.com/forfortsakes\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          @forfortsakes\n        </a>\n        <header className=\"App-header\" style={{ backgroundColor: \"#70c1ec\" }}>\n          <h1>üçÄüÖÇüÖÑüÑøüÑøüÑæüÖÅüÖÉüÑ¥üÖÅ üÑ≤üÑæüÑΩüÖÉüÑ¥üÖÇüÖÉ</h1>\n        </header>\n        <Countdown />\n        <Leaderboard />\n        <Prizes/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './component/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}